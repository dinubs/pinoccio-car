{
  "name": "pinoccio-server",
  "description": " pinoccio command server for your local network. bridges to the pinocc.io api for historical data streams and outside access!",
  "version": "0.0.4",
  "repository": {
    "url": "git://github.com/soldair/pinoccio-server.git"
  },
  "main": "index.js",
  "scripts": {
    "test": "tape test/*.js"
  },
  "author": {
    "name": "Ryan Day"
  },
  "dependencies": {
    "through": "~2.3.4",
    "split": "~0.3.0",
    "reconnect-net": "~0.0.0"
  },
  "devDependencies": {
    "tape": "~2.3.2"
  },
  "readme": "pinoccio-server\n===============\n\na pinoccio command server for your local network. proxies to the pinocc.io api for historical data streams and outside access!\n\nthe neat thing is that if you use this server HQ will still work and you can still use the api streams to make rad things!\n  \n```js\nvar server = require('pinoccio-server');\n\nserver(function(troop){\n\n  troop.command(1,'led.red',function(err,data){\n    console.log('i set the led to red',data);\n  })\n  \n})\n\n\n```\n\nyou can use the troop stream directly if you want to implement your own server logic\n\n```js\n\nvar commands = require('pinoccio-server/troop');\n// example todo...\n\n```\n\nyou can use the bridging directly if you want to hook things into the board api or bridge to more external servers.\n\ni dont know if thats a good idea but we'll see ;)\n\n```js\n\nvar bridge = require('pinoccio-server/bridge');\n// example todo ....\n\n```\n\n### Connect your Troop to your server\n\n#### Option 1: Using Bridge Mode\n\nPlug in your Scout (USB), turn it on, and bridge it (in a new terminal tab)...\n\n```\n$ pinoccio bridge -v --host 127.0.0.1\n```\n\nBy default, your sever will be running on localhost. We added `-v` to get verbose output, which is more fun.\n\n#### Option 2: Using a WiFi Lead Scout\n\nSet a new HQ address on the Lead Scout and reassociate the WiFi.\n\n```\n> hq.setaddress(\"YOUR_IP_ADDRESS\"); wifi.reassociate;\n```\n\nYour Lead will disconnect from Pinoccio's HQ, and reconnect to your local server (you'll see some output in your terminal when it does).\n\nIf you want to make this change stick when your Lead Scout reboots, you'll need to add it to your startup function, e.g.\n\n```\n> function startup {hq.setaddress(\"YOUR_IP_ADDRESS\"); wifi.reassociate;}\n```\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/soldair/pinoccio-server/issues"
  },
  "homepage": "https://github.com/soldair/pinoccio-server",
  "_id": "pinoccio-server@0.0.4",
  "_from": "pinoccio-server@~0.0.2"
}
