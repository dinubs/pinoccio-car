{
  "name": "shuffle-array",
  "repository": {
    "type": "git",
    "url": "git@github.com:pazguille/shuffle-array.git"
  },
  "description": "Randomize the order of the elements in a given array.",
  "author": {
    "name": "Guille Paz",
    "email": "guille87paz@gmail.com"
  },
  "version": "0.0.2",
  "scripts": {
    "start": "gulp",
    "test": "gulp test"
  },
  "devDependencies": {
    "better-assert": "^1.0.1",
    "gulp": "^3.6.2",
    "gulp-footer": "^1.0.5",
    "gulp-header": "^1.0.5",
    "gulp-mocha": "^0.5.2",
    "gulp-rename": "^1.2.0",
    "gulp-replace": "^0.4.0",
    "gulp-uglify": "^0.3.1",
    "mkdirp": "^0.3.5"
  },
  "main": "index.js",
  "keywords": [
    "random",
    "shuffle",
    "array"
  ],
  "license": "MIT",
  "readme": "# shuffle-array [![Build Status](https://secure.travis-ci.org/pazguille/shuffle-array.png)](http://travis-ci.org/pazguille/shuffle-array) [![devDependency Status](https://david-dm.org/pazguille/shuffle-array/dev-status.png)](https://david-dm.org/pazguille/shuffle-array#info=devDependencies)\n\n> Randomize the order of the elements in a given array using the [Fisher-Yates algorithm](https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle).\n\n## Installation\n\n    $ component install pazguille/shuffle-array\n\nSee: [https://github.com/component/component](https://github.com/component/component)\n\n    $ npm install shuffle-array\n\n### Standalone\nAlso, you can use the standalone version:\n```html\n<script src=\"dist/shuffle-array.js\"></script>\n```\n\n## How-to\n```js\nvar shuffle = require('shuffle-array'),\n    collection = [1,2,3,4,5];\n\nshuffle(collection);\n\nconsole.log(collection); // returns [4, 3, 1, 5, 2]\n```\n\n## API\n\n### shuffle(arr, [copy])\nRandomizes the order of the elements in a given `array`.\n- `arr` - The given array.\n- `copy` [optional] - Sets if should return a shuffled copy of the given array. By default it's a falsy value.\n\n```js\nshuffle([1,2,3,4,5]); // returns [4, 3, 1, 5, 2]\n\n// Return a copy of the given array\nshuffle([1,2,3,4,5], true); // returns [4, 3, 1, 5, 2] (copied)\n```\n\n### shuffle.pick(arr, [picks])\nPick one or more `random` elements from the given `array`.\n- `arr` - The given array.\n- `picks` [optional] - Specifies how many random elements you want to pick. By default it picks 1.\n\n```js\nshuffle.pick([1,2,3,4,5]); // returns 5\n\n// Return a random collection with 2 elements\nshuffle.pick([1,2,3,4,5], 2); // returns [4, 3]\n```\n\n## Maintained by\n- Guille Paz (Front-end developer | Web standards lover)\n- E-mail: [guille87paz@gmail.com](mailto:guille87paz@gmail.com)\n- Twitter: [@pazguille](http://twitter.com/pazguille)\n- Web: [http://pazguille.me](http://pazguille.me)\n\n## License\nLicensed under the MIT license.\n\nCopyright (c) 2014 [@pazguille](http://twitter.com/pazguille).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/pazguille/shuffle-array/issues"
  },
  "homepage": "https://github.com/pazguille/shuffle-array",
  "_id": "shuffle-array@0.0.2",
  "dist": {
    "shasum": "d4840f0b9a75502c714bc33931541f2acebc914d"
  },
  "_from": "shuffle-array@0.0.2",
  "_resolved": "https://registry.npmjs.org/shuffle-array/-/shuffle-array-0.0.2.tgz"
}
